# SACCO Management System - Production Configuration
# Spring Boot Application Properties for Production Environment

# ========================================
# SERVER CONFIGURATION
# ========================================
server.port=${SERVER_PORT:8082}
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
server.http2.enabled=true

# ========================================
# DATABASE CONFIGURATION
# ========================================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/sacco_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sacco_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=true

# ========================================
# JPA / HIBERNATE CONFIGURATION
# ========================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.open-in-view=false

# ========================================
# LOGGING CONFIGURATION
# ========================================
logging.level.root=INFO
logging.level.com.example.demo=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Log file configuration
logging.file.name=logs/application.log
logging.file.max-size=10MB
logging.file.max-history=30
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ========================================
# SECURITY CONFIGURATION
# ========================================
# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS Configuration
allowed.origins=${ALLOWED_ORIGINS:http://localhost,http://localhost:4200}

# Session Configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true

# ========================================
# FILE UPLOAD CONFIGURATION
# ========================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}
spring.servlet.multipart.file-size-threshold=2KB
upload.path=${UPLOAD_DIR:/var/uploads/sacco}

# ========================================
# ACTUATOR CONFIGURATION
# ========================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# ========================================
# SWAGGER/OPENAPI CONFIGURATION
# ========================================
springdoc.api-docs.enabled=${ENABLE_SWAGGER:false}
springdoc.swagger-ui.enabled=${ENABLE_SWAGGER:false}
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# ========================================
# EMAIL CONFIGURATION (Optional)
# ========================================
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST:smtp.gmail.com}

# ========================================
# APPLICATION SPECIFIC CONFIGURATION
# ========================================
# SACCO Settings
sacco.name=SACCO Management System
sacco.currency=KES
sacco.timezone=Africa/Nairobi
sacco.date-format=dd/MM/yyyy
sacco.datetime-format=dd/MM/yyyy HH:mm:ss

# SMS Configuration
sms.api.key=${SMS_API_KEY}
sms.api.secret=${SMS_API_SECRET}
sms.sender.id=${SMS_SENDER_ID:SACCO}
sms.provider=${SMS_PROVIDER:africastalking}

# M-PESA Configuration
#mpesa.consumer.key=${MPESA_CONSUMER_KEY}
#mpesa.consumer.secret=${MPESA_CONSUMER_SECRET}
#mpesa.passkey=${MPESA_PASSKEY}
#mpesa.shortcode=${MPESA_SHORTCODE}
#mpesa.callback.url=${MPESA_CALLBACK_URL}
mpesa.environment=${MPESA_ENVIRONMENT:production}

# ========================================
# PERFORMANCE TUNING
# ========================================
# Enable response compression
# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=clients,products,users,roles

# ========================================
# ERROR HANDLING
# ========================================
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false

# ========================================
# JACKSON CONFIGURATION
# ========================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Africa/Nairobi
spring.jackson.default-property-inclusion=non_null

# ========================================
# BANNER CONFIGURATION
# ========================================
spring.banner.location=classpath:banner.txt


# M-PESA Configuration (Daraja API)
# For production, use environment variables. These are sandbox defaults for development
mpesa.consumer.key=${MPESA_CONSUMER_KEY:your_consumer_key_here}
mpesa.consumer.secret=${MPESA_CONSUMER_SECRET:your_consumer_secret_here}
mpesa.security.credential=${MPESA_CREDS:your_consumer_secret_here}
mpesa.shortcode=${MPESA_SHORTCODE:174379}
mpesa.passkey=${MPESA_PASSKEY:bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919}
mpesa.initiator.name=${MPESA_INITIATOR_NAME:testapi}
mpesa.initiator.password=${MPESA_INITIATOR_PASSWORD:Safaricom999!*!}
mpesa.callback.url=${MPESA_CALLBACK_URL:https://your-domain.com/api/mpesa/callback}
mpesa.b2c.queue.timeout.url=${MPESA_B2C_TIMEOUT_URL:https://your-domain.com/api/mpesa/b2c/timeout}
mpesa.b2c.result.url=${MPESA_B2C_RESULT_URL:https://your-domain.com/api/mpesa/b2c/result}
mpesa.api.url=${MPESA_API_URL:https://sandbox.safaricom.co.ke}
mpesa.oauth.url=${MPESA_OAUTH_URL:https://sandbox.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials}
