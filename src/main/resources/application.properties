# Application Configuration
spring.application.name=SACCO Management System
server.port=${SERVER_PORT:8082}

# Database Configuration
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/sacco_management}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:smungai}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Mail Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# JWT Configuration
jwt.secret=${JWT_SECRET:YourSecretKeyHerePleaseChangeInProduction123456789}
jwt.expiration=${JWT_EXPIRATION:86400000}
jwt.access-token-expiration=${JWT_ACCESS_EXPIRATION:3600000}
jwt.refresh-token-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Redis Configuration (for USSD sessions and OTP storage)
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=60000
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# API Documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# CORS Configuration
app.cors.allowed-origins=${CORS_ORIGINS:http://localhost:4200}

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging Configuration
logging.level.root=INFO
logging.level.com.sacco=${LOG_LEVEL:INFO}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# SMS/Communication Configuration
infobip.api.key=${INFOBIP_API_KEY:}
infobip.base.url=${INFOBIP_BASE_URL:}
africas.talking.username=${AT_USERNAME:}
africas.talking.api.key=${AT_API_KEY:}

# M-PESA Configuration (Daraja API)
# For production, use environment variables. These are sandbox defaults for development
mpesa.consumer.key=${MPESA_CONSUMER_KEY:your_consumer_key_here}
mpesa.consumer.secret=${MPESA_CONSUMER_SECRET:your_consumer_secret_here}
mpesa.security.credential=${MPESA_CREDS:your_consumer_secret_here}
mpesa.shortcode=${MPESA_SHORTCODE:174379}
mpesa.passkey=${MPESA_PASSKEY:bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919}
mpesa.initiator.name=${MPESA_INITIATOR_NAME:testapi}
mpesa.initiator.password=${MPESA_INITIATOR_PASSWORD:Safaricom999!*!}
mpesa.callback.url=${MPESA_CALLBACK_URL:https://your-domain.com/api/mpesa/callback}
mpesa.b2c.queue.timeout.url=${MPESA_B2C_TIMEOUT_URL:https://your-domain.com/api/mpesa/b2c/timeout}
mpesa.b2c.result.url=${MPESA_B2C_RESULT_URL:https://your-domain.com/api/mpesa/b2c/result}
mpesa.api.url=${MPESA_API_URL:https://sandbox.safaricom.co.ke}
mpesa.oauth.url=${MPESA_OAUTH_URL:https://sandbox.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials}